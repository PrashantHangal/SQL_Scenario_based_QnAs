# PayPal SQL Interview QnAs
********************************

Question 1: Final Account Balance
Write a SQL query to retrieve the final account balance for each account by calculating the net amount from deposits and withdrawals.

Input Table:
• transactions table:
 - transaction_id (integer)
 - account_id (integer)
 - amount (decimal)
 - transaction_type (varchar)

Ans:
 select account_id,
	Sum(Case
		When transaction_type = 'deposit' then amount
		when transaction_type = 'withdraw' then -amount
		else 0
	   end) as final_balance
 from transaction  
 Group by account_id;



Question 2: Average Transaction Amount per User
Write a SQL query to compute the average transaction amount for each user and rank the users in descending order based on their average transaction amount.

Input Table:
• transactions table:
 - transaction_id (integer)
 - user_id (integer)
 - transaction_date (date)
 - amount (decimal)

Ans:
  Select user_id,
	Round(Avg(amount),2) as avg_transaction_amount
	Rank() over (order by avg(amount) Desc) as rank_by_avg_amount
  From transactions
  group by user_id
  order by avg_transaction_amount Desc;



Question 3: Unique Money Transfer Relationships
Write a SQL query to determine the number of unique two-way money transfer relationships, where a two-way relationship is established if a user has sent money to another user and also received money from the same user.

Input Table:
• payments table:
 - payer_id (integer)
 - recipient_id (integer)
 - amount (integer)

Ans:
 Select count(*) as two_way_realtionships
 from (
	Select
	  LEAST(p1.payer_id, p1.recipient_id) AS user1,
	  GREATEST(p1.payer_id, p1.recipient_id) AS user2
        From payments p1
	Join payments p2
	ON p1.payer_id = p2.recipient_id
	AND p1.recipient_id = p2.payer_id
	Where p1.payer_id < p2.recipient_id
	Group by LEAST(p1.payer_id, p1.recipient_id), GREATEST(p1.payer_id, p1.recipient_id)
) AS two_way_pairs;



Question 4: Determining High-Value Customers
Write a SQL query to identify users who, in the last month, have either sent payments over 1000 or received payments over 5000, excluding those flagged as fraudulent.

Input Tables:
• transactions table:
 - transaction_id (integer)
 - user_id (integer)
 - transaction_date (date)
 - transaction_type (varchar)
 - amount (decimal)

• users table:
 - user_id (integer)
 - username (text)
 - is_fraudulent (boolean)

Ans: 
select Distinct u.user_id, u.username
from transactions t
Join users u
ON t.user_id = u.user_id
Where t.transaction_date >= Current_date - Interval '1 month'
	AND u.is_fraudulent = False
	AND (
	      (t.transaction_type = sent AND t.amount > 1000) OR
	      (t.transaction_type = receive AND t.amount >5000)
	);  



Question 5: Analyzing User Transaction Data
Write a SQL query that calculates the total and average transaction amount for each user, including only those users who have made at least two transactions.

Input Tables:
• Users table:
 - user_id (integer)
 - signup_date (date)

• Transactions table:
 - transaction_id (integer)
 - user_id (integer)
 - transaction_date (date)
 - transaction_amount (decimal)


Ans:
 Select 
	u.user_id,
	COUNT(t.transaction_id) as total_transaction
	sum(t.transaction_amount) as total_amount
	ROUND(avg(t.transaction_amount),2) as avg_amount
  From users u
  Join Transactions t
  ON u.user_id = t.user_id
  group by u.user_id
  Having COUNT(t.transaction_id) > 2;
